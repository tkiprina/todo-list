{"version":3,"sources":["consts/index.js","reducers/index.js","components/button/button.js","components/header/header.js","actions/index.js","components/list-item-icon/list-item-icon.js","components/list-item/list-item.js","components/list/list.js","components/modal/modal.js","components/app/app.js","index.js"],"names":["SELECT_ITEM","REMOVE_ITEM","ADD_ITEM","EDIT_ITEM","OPEN_MODAL_EDIT","OPEN_MODAL_CREATE","CLOSE_MODAL","CHANGE_MODE","RED","BLUE","GREY","FONT_FAMILY","inintialState","items","editItem","modalCreateIsOpen","modalEditIsOpen","editItemMode","currentId","reducer","state","action","type","id","payload","map","item","selected","text","newItem","itemIdx","findIndex","slice","ModeBtn","styled","button","PlusBtn","btnStyles","CloseBtn","SaveBtn","Button","props","onClick","click","children","View","header","mapDispatchToProps","changeMode","connect","isEdit","iconStyle","RemoveIcon","CheckedIcon","div","Selected","ListIcon","Item","li","openModalEdit","selectItem","removeItem","fontStyle","Ul","ul","Placeholder","length","Backdrop","ModalContainer","BtnContainer","inputStyle","Area","textarea","Input","NotValidLabel","span","Modal","inputVal","isNotValid","textChangeHandler","bind","closeBtnClickHandler","saveBtnClickHandler","e","this","setState","target","value","closeModal","addItem","trim","modalInput","placeholder","onChange","primaryBtnText","Component","Container","openModalCreate","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cf7ff893.chunk.js","sourcesContent":["export const SELECT_ITEM = 'SELECT_ITEM';\nexport const REMOVE_ITEM = 'REMOVE_ITEM';\nexport const ADD_ITEM = 'ADD_ITEM';\nexport const EDIT_ITEM = 'EDIT_ITEM';\n\nexport const OPEN_MODAL_EDIT = 'OPEN_MODAL_EDIT';\nexport const OPEN_MODAL_CREATE= 'OPEN_MODAL_CREATE';\nexport const CLOSE_MODAL = 'CLOSE_MODAL';\n\nexport const CHANGE_MODE = 'CHANGE_MODE';\n\nexport const RED = '#E85C5C';\nexport const BLUE = '#23A3FF';\nexport const GREY = '#F2F2F2';\nexport const FONT_FAMILY = 'Gilroy';","import {SELECT_ITEM, REMOVE_ITEM, ADD_ITEM, EDIT_ITEM, OPEN_MODAL_EDIT, OPEN_MODAL_CREATE, CHANGE_MODE, CLOSE_MODAL} from '../consts';\n\nconst inintialState = {\n    items: [],\n    editItem: null,\n    modalCreateIsOpen: false,\n    modalEditIsOpen: false,\n    editItemMode: false,\n    currentId: 0\n};\n\nconst reducer = (state = inintialState, action) => {\n\n    switch (action.type) {\n        case SELECT_ITEM:\n        {\n            const id = action.payload;\n\n            return {\n                ...state,\n                items: state.items.map((item) => {\n                    if (item.id === id) {\n                        item.selected = !item.selected;\n                    }\n                    return item;\n                })\n            }\n        }\n\n        case ADD_ITEM: \n        {\n            const text = action.payload,\n                  id = state.currentId+1;\n\n            const newItem = {\n                text,\n                id,\n                selected: false\n            };\n\n            return {\n                ...state,\n                currentId: id,\n                items: [\n                    ...state.items,\n                    newItem\n                ]\n            }\n        }\n\n        case REMOVE_ITEM: \n        {\n            const id = action.payload;\n            const itemIdx = state.items.findIndex(item => item.id === id);\n\n            if (itemIdx > -1){\n                return {\n                    ...state,\n                    items: [\n                        ...state.items.slice(0, itemIdx),\n                        ...state.items.slice(itemIdx+1)\n                    ]\n                }\n            }\n            \n            return state;\n        }\n\n        case EDIT_ITEM:\n        {\n            const {id, text} = action.payload;\n\n            return {\n                ...state,\n                items: state.items.map((item) => {\n                    if (item.id === id) {\n                        item.text = text\n                    }\n                    return item;\n                })\n            }\n        }    \n        \n        case OPEN_MODAL_EDIT:\n            return {\n                ...state,\n                editItem: action.payload,\n                modalEditIsOpen: true\n            }\n        \n        case OPEN_MODAL_CREATE:\n            return {\n                ...state,\n                modalCreateIsOpen: true\n            }\n\n        case CLOSE_MODAL:\n            return {\n                ...state,\n                editItem: null,\n                modalEditIsOpen: false,\n                modalCreateIsOpen: false\n            }\n            \n        \n        case CHANGE_MODE:\n            return {\n                ...state,\n                editItemMode: !state.editItemMode\n            }\n\n        default:\n            return state;\n    }\n}\n\nexport default reducer;","import React from 'react';\nimport styled from 'styled-components';\nimport {GREY, BLUE, FONT_FAMILY} from '../../consts';\n\nconst ModeBtn = styled.button`\n    display: block;\n    width: 86px;\n    height: 27px;\n    background: ${GREY};\n    border-radius: 4px;\n    border: none;\n    font-family: ${FONT_FAMILY};\n    font-style: normal;\n    font-weight: 500;\n    font-size: 14px;\n    line-height: 140%;\n    letter-spacing: 0.01em;\n    color: #000000;\n`;\n\nconst PlusBtn = styled.button`\n    position: fixed;\n    width: 60px;\n    height: 60px;\n    right: 40px;\n    bottom: 40px;\n    border: none;\n    border-radius: 30px;\n    padding: 0;\n    background: #FFFFFF;\n    box-shadow: 0px 10px 40px rgba(0, 0, 0, 0.1);\n\n    &:before {\n        content: '';\n        position: absolute;\n        left: 20px;\n        width: 20px;\n        height: 2px;\n        background: ${BLUE};\n    }\n\n    &:after {\n        content: '';\n        position: absolute;\n        left: 29px;\n        top: 21px;\n        width: 2px;\n        height: 20px;\n        background: ${BLUE};\n    }\n`;\n\nconst btnStyles = `\n    display:block;\n    width: 137px;\n    height: 40px;\n    border-radius: 10px;\n    border: none;\n    font-family: ${FONT_FAMILY};\n    font-style: normal;\n    font-weight: 500;\n    font-size: 16px;\n    line-height: 140%;\n    letter-spacing: 0.01em;\n`;\n\nconst CloseBtn = styled.button`\n    ${btnStyles}\n    background: ${GREY};\n    color: #4D4D4D;\n`;\n\nconst SaveBtn = styled.button`\n    ${btnStyles}\n    color: #FFFFFF;\n    background: ${BLUE};\n\n`;\n\nconst Button = (props) => {\n\n    if (props.type === \"mode\") {\n        return (\n            <ModeBtn type=\"button\" onClick={props.click}>\n                {props.children}\n            </ModeBtn>    \n        );\n    }\n\n    if (props.type === \"plus\") {\n        return (\n            <PlusBtn type=\"button\" onClick={props.click}>\n                {props.children}\n            </PlusBtn>    \n        );\n    }\n\n    if (props.type === \"close\") {\n        return (\n            <CloseBtn type=\"button\" onClick={props.click}>\n                {props.children}\n            </CloseBtn>    \n        );\n    }\n\n    if (props.type === \"save\") {\n        return (\n            <SaveBtn type=\"button\" onClick={props.click}>\n                {props.children}\n            </SaveBtn>    \n        );\n    }\n    \n}\n\nexport default Button;","import React from 'react';\nimport styled from 'styled-components';\nimport {connect} from 'react-redux';\nimport {changeMode} from '../../actions';\nimport Button from '../button/button';\n\nconst View = styled.header`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n\n    & h1{\n        margin: 0;\n        font-style: normal;\n        font-weight: 800;\n        font-size: 28px;\n        line-height: 41px;\n        letter-spacing: 0.01em;\n        color: #1C1C1C;\n    }\n`;\n\nconst Header = (props) => {\n\n    const {changeMode, isEdit} = props;\n    const text = isEdit ? 'Отменить' : 'Править';\n\n    const btnClickHandler = () => {\n        changeMode();\n    }\n\n    return (\n        <View>\n            <h1>Сегодня</h1>\n            <Button type=\"mode\" click={btnClickHandler}>{text}</Button>\n        </View>    \n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        isEdit: state.editItemMode,\n    }\n};\n\n\nconst mapDispatchToProps = {changeMode};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);","import {SELECT_ITEM, REMOVE_ITEM, ADD_ITEM, EDIT_ITEM, OPEN_MODAL_EDIT, OPEN_MODAL_CREATE, CHANGE_MODE, CLOSE_MODAL} from '../consts';\n\nconst selectItem = (item) => {\n    return {\n        type: SELECT_ITEM,\n        payload: item.id\n    };\n};\n\nconst removeItem = (id) => {\n    return {\n        type: REMOVE_ITEM,\n        payload: id\n    };\n};\n\nconst addItem = (text) => {\n    return {\n        type: ADD_ITEM,\n        payload: text\n    };\n}\n\nconst editItem = (item) => {\n    return {\n        type: EDIT_ITEM,\n        payload: item\n    }\n}\n\nconst openModalCreate = () => {\n    return {\n        type: OPEN_MODAL_CREATE,\n    }\n}\n\nconst openModalEdit = (item) => {\n    return {\n        type: OPEN_MODAL_EDIT,\n        payload: item\n    }\n}\n\nconst closeModal = () => {\n    return {\n        type: CLOSE_MODAL,\n    }\n}\n\nconst changeMode = () => {\n    return {\n        type: CHANGE_MODE,\n    }\n}\n\nexport {selectItem, removeItem, addItem, editItem, openModalCreate, openModalEdit, changeMode, closeModal};","import React from 'react';\nimport styled from 'styled-components';\nimport { RED, BLUE} from '../../consts';\n\nconst iconStyle = `\n    display:block;\n    position: relative;\n    width: 22px;\n    height: 22px;\n    margin-right: 14px;\n    border-radius: 11px;\n`;\n\nconst RemoveIcon = styled.button`\n    ${iconStyle}\n    border: none;\n    background: ${RED};\n\n    &:before {\n        content: '';\n        position: absolute;\n        left: 6px;\n        top: 10px;\n        width: 10px;\n        height: 2px;\n        background: #fff;\n    }\n`;\n\nconst CheckedIcon = styled.div`\n    ${iconStyle}\n    padding: 3px;\n    border: 2px solid #D9D9D9;\n    box-sizing: border-box;\n`;\n\nconst Selected = styled.div`\n    width: 12px;\n    height: 12px;\n    border-radius: 6px;\n    background: ${BLUE};\n`;\n\n\n\nconst ListIcon = (props) => {\n    \n    if (props.isEdit) {\n        return (\n        <RemoveIcon type=\"button\" onClick={props.click}/>);\n    }\n\n    return (\n        <CheckedIcon onClick={props.click}>\n            {props.selected ? <Selected/> : ''}\n        </CheckedIcon>\n    );\n}\n\nexport default ListIcon;","import React from 'react';\nimport styled from 'styled-components';\nimport ListIcon from '../list-item-icon/list-item-icon';\nimport {connect} from 'react-redux';\nimport {openModalEdit, selectItem, removeItem} from '../../actions';\n\nconst Item = styled.li`\n    margin-bottom: 30px;\n    display: flex;\n    justify-content: flex-start;\n    align-items: center;\n\n    &.selected {\n        color: rgba(0, 0, 0, 0.6);\n    }\n`;\n\nconst ListItem = (props) => {\n\n    const {item, selected, isEdit, openModalEdit, selectItem, removeItem} = props;\n\n    const itemClickHandler = () => {\n        if (isEdit) {\n            openModalEdit(item);\n        } else {\n            selectItem(item);\n        }\n    }\n\n    const iconClickHandler = () => {\n        if (isEdit) {\n            removeItem(item.id);\n        } else {\n            selectItem(item);\n        }\n    }\n\n    return (\n        <Item>\n            <ListIcon isEdit={isEdit} selected={selected} click={iconClickHandler}/>\n            <span onClick={itemClickHandler}>{props.children}</span>\n        </Item>\n    );\n}\n\nconst mapStateToProps = (state) => ({\n    isEdit: state.editItemMode\n});\n\nconst mapDispatchToProps = {\n    openModalEdit,\n    selectItem,\n    removeItem\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ListItem);","import React from 'react';\nimport styled from 'styled-components';\nimport {connect} from 'react-redux';\nimport ListItem from '../list-item/list-item';\nimport {FONT_FAMILY} from '../../consts';\n\nconst fontStyle = `\n    font-family: ${FONT_FAMILY};\n    font-style: normal;\n    font-weight: 500;\n    font-size: 18px;\n    line-height: 120%;\n`;\n\nconst Ul = styled.ul`\n    margin: 47px 0 0 0;\n    padding: 0;\n    list-style: none;\n    ${fontStyle}\n`;\n\nconst Placeholder = styled.div`\n    margin: 49px 0 0 0;\n    ${fontStyle}\n`;\n\nconst List = (props) => {\n\n    const {items} = props;\n\n    if (!items || items.length<1) {\n        return (\n            <Placeholder>Список задач пуст</Placeholder>\n        )\n    }\n\n    return (\n        <Ul>\n            {\n                items.map((item) => (\n                    <ListItem key={item.id} selected={item.selected} item={item}>{item.text}</ListItem>\n                ))\n            }\n        </Ul>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    items: state.items,\n    editItem: state.editItem\n});\n\n\nexport default connect(mapStateToProps)(List);","import React, {Component} from 'react';\nimport styled from 'styled-components';\nimport {connect} from 'react-redux';\nimport {closeModal, addItem, editItem} from '../../actions';\nimport {RED} from '../../consts';\n\nimport Button from '../button/button';\n\nconst Backdrop = styled.div`\n    position: absolute;\n    top: 0;\n    left: 0;\n    z-index: 10;\n    width: 100vw;\n    height: 100vh;\n    overflow: hidden;\n    background: rgba(0,0,0,0.025);\n`;\n\nconst ModalContainer = styled.div`\n    position: fixed;\n    top: 132px;\n    width: 100%;\n    height: calc(100vh - 132px);\n    box-sizing: border-box;\n    padding: 42px 40px;\n    background: #FFFFFF;\n    box-shadow: 0px 0px 40px rgba(0, 0, 0, 0.1);\n    border-radius: 40px 40px 0px 0px;\n`;\n\nconst BtnContainer = styled.div`\n    display: flex;\n    justify-content: space-between;\n    margin-top: 30px;\n`;\n\nconst inputStyle = `\n    width: 100%;\n    border: 2px solid #E6E6E6;\n    box-sizing: border-box;\n    border-radius: 10px;\n    esize: none;\n`;\n\nconst Area = styled.textarea`\n    min-height: 160px;\n    padding: 20px;\n    ${inputStyle}\n`;\n\nconst Input = styled.textarea`\n    min-height: 50px;\n    padding: 14px 20px;\n    ${inputStyle}\n`;\n\nconst NotValidLabel = styled.span`\n    display:block;\n    font-size: 12px;\n    color: ${RED};\n`;\n\nclass Modal extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            inputVal: props.item ? props.item.text : null,\n            isNotValid: false\n        }\n\n        this.textChangeHandler = this.textChangeHandler.bind(this);\n        this.closeBtnClickHandler = this.closeBtnClickHandler.bind(this);\n        this.saveBtnClickHandler = this.saveBtnClickHandler.bind(this);\n    }\n\n    textChangeHandler(e){\n        this.setState({\n            inputVal: e.target.value\n        });\n    }\n\n    closeBtnClickHandler(){\n        const {closeModal} = this.props;\n        closeModal();\n    }\n\n    saveBtnClickHandler(){\n        const {addItem, editItem, closeModal, isEdit, item} = this.props;\n        const value = this.state.inputVal;\n        \n        if (!value || !value.trim()) {\n            this.setState({\n                isNotValid: true\n            });\n\n            return;\n        }\n        \n        if (!isEdit) {\n            addItem(value);\n        } else {\n            editItem({\n                text: value,\n                id: item.id,\n                selected: item.selected\n            });\n        }\n        \n        closeModal();\n    }\n\n\n    render() {\n        let modalInput = <Area placeholder=\"Введите текст задачи\" onChange={this.textChangeHandler} value={this.state.inputVal||''}/>;\n        let primaryBtnText = 'Добавить';\n\n        if (this.props.isEdit) {\n            modalInput = <Input onChange={this.textChangeHandler} value={this.state.inputVal||''}/>;\n            primaryBtnText = 'Сохранить';\n        }\n\n        return (\n            <Backdrop>\n                <ModalContainer>\n                    <form>\n                        {modalInput}\n                        {this.state.isNotValid ? <NotValidLabel>Пожалуйста, введите текст задачи</NotValidLabel> : null}\n                    </form>\n                    <BtnContainer>\n                        <Button type=\"close\" click={this.closeBtnClickHandler}>Закрыть</Button>\n                        <Button type=\"save\" click={this.saveBtnClickHandler}>{primaryBtnText}</Button>\n                    </BtnContainer>\n                </ModalContainer>\n            </Backdrop>\n            \n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    isEdit: state.editItemMode,\n    item: state.editItem\n});\n\nconst mapDispatchToProps = {\n    closeModal,\n    addItem,\n    editItem\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Modal);\n","import React from 'react';\nimport styled from 'styled-components';\nimport {connect} from 'react-redux';\nimport {openModalCreate} from '../../actions';\nimport Header from '../header/header';\nimport Button from '../button/button';\nimport List from '../list/list';\nimport Modal from '../modal/modal';\nimport {FONT_FAMILY} from '../../consts';\n\nconst Container = styled.div`\n    position: relative;\n    padding: 60px 40px 40px 40px;\n    font-family: ${FONT_FAMILY};\n`;\n\nconst App = (props) => {\n    \n    const {openModalCreate, isEdit, modalCreateIsOpen, modalEditIsOpen} = props;\n\n    const btnClickHandler = () => { \n        openModalCreate();\n    }\n\n    return (\n        <Container>\n            <Header/>\n            <List/>\n            {isEdit ? null : <Button type=\"plus\" click={btnClickHandler}/> } \n            {modalCreateIsOpen ? <Modal type=\"create\"/> : null}\n            {modalEditIsOpen ? <Modal type=\"create\"/> : null}\n        </Container>\n    );\n}\n\nconst mapStateToProps = (state) => ({\n    isEdit: state.editItemMode,\n    modalCreateIsOpen: state.modalCreateIsOpen,\n    modalEditIsOpen: state.modalEditIsOpen\n});\n\nconst mapDispatchToProps = {\n    openModalCreate\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {createStore} from 'redux';\nimport {Provider} from 'react-redux';\nimport reducer from './reducers';\nimport 'normalize.css';\nimport './index.css';\n\nimport App from './components/app/app';\n\nconst store = createStore(reducer);\n\n\nReactDOM.render(\n  <Provider store={store}>\n      <App/>\n  </Provider>\n  , document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}